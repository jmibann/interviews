(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[24],{

/***/ "./src/components/report/ReportGeneration.container.jsx":
/*!**************************************************************!*\
  !*** ./src/components/report/ReportGeneration.container.jsx ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// import React from 'react';\n// import { connect } from 'react-redux';\n// import { Link, Redirect } from 'react-router-dom';\n// import Axios from 'axios';\n// import { fetchCandidate, fetchCandidateInterview } from '../../../redux/action-creator/candidate';\n// import { fetchHrAnswers, fetchSistAnswers, fetchGeneralObs } from '../../../redux/action-creator/answer';\n// import StarsCalification from './StarsCalification';\n// class ReportGeneration extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       candidato: {\n//         tags: []\n//       },\n//       mail: ''\n//     };\n//     this.exportMail = this.exportMail.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//   handleChange(e) {\n//     let value = e.target.value;\n//     this.setState({ mail: value });\n//   }\n//   exportMail() {\n//     Axios.post('/api/candidate/export', {\n//       data: {\n//         mail: this.state.mail,\n//         subject: 'Endava - HHRR Interview - Candidate: ' + this.props.candidate.name + ' ' + this.props.candidate.surname + ' (ID: ' + this.props.candidate.id + ')'\n//       },\n//       content: {\n//         candidate: this.props.candidate,\n//         HHRR: this.props.answersHR,\n//         SYS: this.props.answersSIST\n//       }\n//     });\n//   }\n//   componentDidMount() {\n//     this.props.fetchCandidate(this.props.candID)\n//       .then(() => this.props.fetchCandidateInterview(this.props.candID))\n//       .then(() => this.props.answersHR.length === 0 && this.props.fetchHrAnswers(this.props.candidate.InterviewIDId));\n//   }\n//   componentDidUpdate(prevState) {\n//     if (prevState.candidate.id !== this.props.candidate.id) {\n//       this.props.fetchHrAnswers(this.props.candidate.InterviewIDId);\n//       this.props.fetchSistAnswers(this.props.candidate.InterviewIDId);\n//       this.props.fetchGeneralObs(this.props.candidate.InterviewIDId);\n//     }\n//   }\n//   render() {\n//     const SistInterv1 = !this.props.candidate.interSIST1 ? '' : this.props.candidate.interSIST1.nombre;\n//     const SistInterv2 = !this.props.candidate.interSIST2 ? '' : this.props.candidate.interSIST2.nombre;\n//     return (\n//       <div>\n//         {Object.keys(this.props.user).length\n//           ? <div>\n//             <div className='halfGrid'>\n//               <div>\n//                 <h2 style={{ marginLeft: '4%', marginTop: '3%', textAlign: 'center', marginBottom: '25px' }}><strong style={{ fontSize: '1.3em', borderBottom: '1px solid black' }} >Final Report</strong></h2>\n//                 <h2 style={{ textAlign: 'center', padding: '10px', margin: '1% 7%' }} className={'borde ' + this.props.candidate.status}>\n//                   <p style={{ fontSize: '1em' }}><strong>STATUS :  </strong></p>\n//                   <span className={'statusReport ' + this.props.candidate.status}>{' ' + this.props.candidate.status} </span>\n//                 </h2>\n//               </div>\n//               {/* <div>\n//                 <p style={{ textAlign: 'center', border: '1px solid black', borderRadius: '25px', padding: '15px', margin: '35px 10px' }}>\n//                   <strong style={{ borderBottom: '1px solid black' }}>  Send Report</strong>\n//                   <form style={{\n//                     display: 'grid',\n//                     gridTemplateColumns: '1fr 0.3fr',\n//                     borderRadius: '25px',\n//                     marginLeft: '20px'\n//                   }}>\n//                     <input placeholder=' Type email you want to send this report' id='addTagInput' type='textbox' onChange={this.handleChange}></input>\n//                     <input type='submit' className='ActionsBotonesBlanco' value='Send' onClick={this.exportMail}></input>\n//                   </form>\n//                 </p>\n//               </div> */}\n//             </div>\n//             <div style={{ marginLeft: '30px' }} style={{ display: 'grid', gridTemplateColumns: '1fr 0.7fr' }}>\n//               <div style={{ paddingLeft: '4%' }}>\n//                 <h4 style={{ marginTop: '20px' }}>Candidate's Full-Name: <strong>{this.props.candidate.fullName} </strong></h4>\n//                 <h4>Phone: <strong>{this.props.candidate.telNumber}</strong> </h4>\n//                 <h4>Email Adress: <strong>{this.props.candidate.email}</strong></h4>\n//                 <h4>Candidate ID: <strong>{this.props.candidate.id}</strong></h4>\n//                 {this.props.candidate.tags && this.props.candidate.tags.length > 0 &&\n//                   <h4>Candidate Tags :\n//                 {this.props.candidate.tags.map(tag => <strong key={tag.id}>{' ' + tag.tag + ' '}</strong>)}\n//                   </h4>}\n//               </div>\n//               <div >\n//                 {/* {this.props.candidate.interviewerHR &&\n//                   <h2 style={{ textAlign: 'left', marginTop: '20px', fontSize: '1.5em' }}>\n//                     <strong>HR Interviewer: </strong>\n//                     {' ' + this.props.candidate.interviewerHR.nombre}\n//                   </h2>} */}\n//                 {(this.props.candidate.interSIST1 || this.props.candidate.interSIST2) &&\n//                   <h2>\n//                     <p>Interviewer: </p>\n//                     {' ' + SistInterv1} {SistInterv2 ? ', ' + SistInterv2 : ''}\n//                   </h2>}\n//               </div>\n//             </div>\n//             <hr></hr><hr></hr>\n//             <div id='infoCandHR'><h2 style={{ textAlign: 'center' }}><b style={{ fontSize: '1.3em', color: '#DE411C' }}>HR Interview</b></h2><hr></hr><hr></hr>\n//               <div className='answersHR' style={{ padding: '15px' }}>\n//                 {\n//                   this.props.answersHR.map((elemento, key) => (\n//                     <div key={elemento.pregunta} className='answerBox'>\n//                       <h5><strong style={{ borderBottom: '1px solid black' }}>{elemento.pregunta} :</strong> </h5>\n//                       <h5>{elemento.respuesta}</h5>\n//                     </div>\n//                   ))\n//                 }\n//               </div>\n//               <hr></hr><hr></hr>\n//               <div ><h2 style={{ textAlign: 'center' }}><b style={{ fontSize: '1.5em', color: '#DE411C' }}>IT Interview</b></h2><hr></hr><hr></hr></div>\n//               <div className='answersHR' style={{ padding: '15px' }}>\n//                 {\n//                   this.props.answersSIST.map(element => (\n//                     <div key={element.pregunta} className='answerBox' style={{ display: 'grid', gridTemplateColumns: '1fr 0.5fr' }}>\n//                       <h5>\n//                         <strong style={{ borderBottom: '1px solid black' }}>{element.pregunta} :</strong>\n//                         <p style={{ margin: '2% 3%' }}>{element.observation}</p>\n//                       </h5>\n//                       <StarsCalification score={element.score} />\n//                     </div>\n//                   ))\n//                 }\n//               </div>\n//             </div>\n//           </div>\n//           : <Redirect to='/' />\n//         }\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => ({\n//   candidate: state.candidate.candidate,\n//   interviewID: state.candidate.interviewID.interviewID,\n//   answersHR: state.answers.answersHR,\n//   answersSIST: state.answers.answersSIST,\n//   HRObs: state.answers.HRObs,\n//   SistObs: state.answers.SistObs\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchCandidate: (candID) => dispatch(fetchCandidate(candID)),\n//   fetchHrAnswers: (interviewID) => dispatch(fetchHrAnswers(interviewID)),\n//   fetchSistAnswers: (interviewID) => dispatch(fetchSistAnswers(interviewID)),\n//   fetchCandidateInterview: (candID) => dispatch(fetchCandidateInterview(candID)),\n//   fetchGeneralObs: (candID) => dispatch(fetchGeneralObs(candID))\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(ReportGeneration);\n\n//# sourceURL=webpack:///./src/components/report/ReportGeneration.container.jsx?");

/***/ })

}]);